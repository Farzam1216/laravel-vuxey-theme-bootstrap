(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/vendor/js/file-pond/filepond-plugin-pdf-preview.min.js":
/*!*********************************************************************************!*\
  !*** ./resources/assets/vendor/js/file-pond/filepond-plugin-pdf-preview.min.js ***!
  \*********************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
/*!
 * FilePondPluginPdfPreview 1.0.2
 * Licensed under MIT, https://opensource.org/licenses/MIT/
 * Please visit undefined for details.
 */

/* eslint-disable */
!function (e, t) {
  "object" == ( false ? 0 : _typeof(exports)) && "undefined" != "object" ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (t),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
}(this, function () {
  "use strict";

  var e = function e(_e) {
      return /pdf$/.test(_e.type);
    },
    t = function t(_t) {
      return _t.utils.createView({
        name: "pdf-preview-wrapper",
        create: function create(_ref) {
          var i = _ref.root,
            r = _ref.props;
          var d = function (t) {
            return t.utils.createView({
              name: "pdf-preview",
              tag: "div",
              ignoreRect: !0,
              create: function create(_ref2) {
                var t = _ref2.root,
                  i = _ref2.props;
                var r = t.query("GET_ITEM", {
                  id: i.id
                });
                if (e(r.file)) {
                  var _e2 = t.query("GET_PDF_PREVIEW_HEIGHT");
                  t.ref.pdf = document.createElement("object"), t.ref.pdf.setAttribute("height", _e2), t.ref.pdf.setAttribute("width", "100%"), t.ref.pdf.setAttribute("style", "position:absolute;left:0;right:0;margin:auto;padding-top:unset;" + (_e2 ? "height:" + _e2 + "px;" : "")), t.element.appendChild(t.ref.pdf);
                }
              },
              write: t.utils.createRoute({
                DID_PDF_PREVIEW_LOAD: function DID_PDF_PREVIEW_LOAD(_ref3) {
                  var t = _ref3.root,
                    i = _ref3.props;
                  var r = i.id,
                    d = t.query("GET_ITEM", {
                      id: r
                    });
                  if (!d) return;
                  var o = window.URL || window.webkitURL,
                    n = new Blob([d.file], {
                      type: d.file.type
                    });
                  if (t.ref.pdf.type = d.file.type, e(d.file)) {
                    var _e3 = t.query("GET_PDF_COMPONENT_EXTRA_PARAMS");
                    t.ref.pdf.data = o.createObjectURL(n) + (_e3 ? "#?" + _e3 : "");
                  }
                  t.ref.pdf.addEventListener("load", function () {
                    e(d.file) && t.dispatch("DID_UPDATE_PANEL_HEIGHT", {
                      id: r,
                      height: t.ref.pdf.scrollHeight
                    });
                  }, !1);
                }
              })
            });
          }(_t);
          i.ref.pdf = i.appendChildView(i.createChildView(d, {
            id: r.id
          }));
        },
        write: _t.utils.createRoute({
          DID_PDF_PREVIEW_CONTAINER_CREATE: function DID_PDF_PREVIEW_CONTAINER_CREATE(_ref4) {
            var e = _ref4.root,
              t = _ref4.props;
            var i = t.id;
            e.query("GET_ITEM", i) && e.dispatch("DID_PDF_PREVIEW_LOAD", {
              id: i
            });
          }
        })
      });
    },
    i = function i(_i) {
      var r = _i.addFilter,
        d = _i.utils,
        o = d.Type,
        n = d.createRoute,
        p = t(_i);
      return r("CREATE_VIEW", function (t) {
        var i = t.is,
          r = t.view,
          d = t.query;
        if (!i("file")) return;
        r.registerWriter(n({
          DID_LOAD_ITEM: function DID_LOAD_ITEM(_ref5) {
            var t = _ref5.root,
              i = _ref5.props;
            var o = i.id,
              n = d("GET_ITEM", o);
            n && !n.archived && e(n.file) && (t.ref.PdfPreview = r.appendChildView(r.createChildView(p, {
              id: o
            })), t.dispatch("DID_PDF_PREVIEW_CONTAINER_CREATE", {
              id: o
            }));
          }
        }, function (_ref6) {
          var t = _ref6.root,
            i = _ref6.props;
          var r = i.id,
            o = d("GET_ITEM", r);
          e(o.file) && t.rect.element.hidden;
        }));
      }), {
        options: {
          allowPdfPreview: [!0, o.BOOLEAN],
          pdfPreviewHeight: [320, o.INT],
          pdfComponentExtraParams: ["toolbar=0&navpanes=0&scrollbar=0&statusbar=0&zoom=0&messages=0&view=fitH&page=1", o.STRING]
        }
      };
    };
  return "undefined" != typeof window && void 0 !== window.document && document.dispatchEvent(new CustomEvent("FilePond:pluginloaded", {
    detail: i
  })), i;
});

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/vendor/js/file-pond/filepond-plugin-pdf-preview.min.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});